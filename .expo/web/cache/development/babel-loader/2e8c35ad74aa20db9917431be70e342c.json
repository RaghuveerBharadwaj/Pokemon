{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/cyclopz/Desktop/Cyclopz/My Personal Git/React-Native/Pokemon/views/Dishes.tsx\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { connect } from 'react-redux';\nimport { getPokemons } from \"../redux/actions/pokeActions\";\nimport { getDishes } from \"../redux/actions/dishActions\";\nimport styles from \"../styles/styles\";\nvar button = styles.button,\n    buttonText = styles.buttonText,\n    textInput = styles.textInput,\n    pad = styles.pad;\n\nvar Pokemons = function Pokemons(props) {\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      pokemon = _React$useState2[0],\n      setPokemon = _React$useState2[1];\n\n  React.useEffect(function () {\n    props.getPokemons(30);\n    props.getDishes();\n  }, []);\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, React.createElement(TextInput, {\n    style: textInput,\n    placeholder: \"Enter Pokemon\",\n    value: pokemon,\n    onChangeText: function onChangeText(text) {\n      return setPokemon(text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: button,\n    disabled: !pokemon,\n    onPress: function onPress() {\n      return props.getPokemons(pokemon);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: buttonText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, \"SUBMIT\")), React.createElement(ScrollView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      flexDirection: 'row',\n      flexWrap: 'wrap',\n      justifyContent: 'center',\n      margin: 'auto'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, props.pokemons.map(function (poke) {\n    return React.createElement(View, {\n      key: poke.name,\n      style: {\n        margin: 5,\n        backgroundColor: 'white',\n        alignItems: 'center',\n        borderRadius: 5,\n        padding: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, React.createElement(Image, {\n      resizeMode: \"contain\",\n      style: {\n        width: Dimensions.get('screen').width / 4,\n        height: Dimensions.get('screen').width / 4\n      },\n      source: {\n        uri: poke.url\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }), React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    }, poke.name));\n  }))));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    pokemons: state.poke.pokemons\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getPokemons: getPokemons,\n  getDishes: getDishes\n})(Pokemons);","map":{"version":3,"sources":["/home/cyclopz/Desktop/Cyclopz/My Personal Git/React-Native/Pokemon/views/Dishes.tsx"],"names":["React","connect","getPokemons","getDishes","styles","button","buttonText","textInput","pad","Pokemons","props","useState","pokemon","setPokemon","useEffect","text","flex","flexDirection","flexWrap","justifyContent","margin","pokemons","map","poke","name","backgroundColor","alignItems","borderRadius","padding","width","Dimensions","get","height","uri","url","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { View, ScrollView, Text, TextInput, TouchableOpacity, Image, Dimensions } from 'react-native'\nimport { connect } from 'react-redux'\nimport { getPokemons } from '../redux/actions/pokeActions'\nimport { getDishes } from '../redux/actions/dishActions'\nimport styles from '../styles/styles'\n\nconst { button, buttonText, textInput, pad } = styles\n\ntype Props = {\n  getPokemons: Function\n  getDishes: Function\n  pokemons: Array<{\n    name: string\n    url: string\n  }>\n  navigation: {navigate: Function}\n}\n\nconst Pokemons = (props: Props) => {\n\n  const [pokemon, setPokemon] = React.useState('')\n\n  React.useEffect(() => {\n    props.getPokemons(30)\n    props.getDishes()\n  }, [])\n\n  return (\n    <View>\n      <TextInput\n        style={textInput}\n        placeholder='Enter Pokemon'\n        value={pokemon}\n        onChangeText={(text: string) => setPokemon(text)} />\n      <TouchableOpacity\n        style={button}\n        disabled={!pokemon}\n        onPress={() => props.getPokemons(pokemon)}>\n          <Text style={buttonText}>\n            SUBMIT\n          </Text>\n        </TouchableOpacity>\n        <ScrollView>\n      <View style={{\n        flex: 1,\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        justifyContent: 'center',\n        margin: 'auto' }}>\n        {props.pokemons.map(poke =>\n        <View\n          key={poke.name}\n          style={{\n            margin: 5,\n            backgroundColor: 'white',\n            alignItems: 'center',\n            borderRadius: 5,\n            padding: 10 }}>\n          <Image\n            resizeMode='contain'\n            style={{width: (Dimensions.get('screen').width / 4), height: Dimensions.get('screen').width / 4}}\n            source={{ uri: poke.url }} />\n          <Text>\n            {poke.name}\n          </Text>          \n        </View>)}\n    </View>\n    </ScrollView>\n    </View>\n  )\n}\n\nconst mapStateToProps = (state: any) => {\n  return {\n    pokemons: state.poke.pokemons\n  }\n}\n\nexport default connect(mapStateToProps, { getPokemons, getDishes })(Pokemons)\n"]},"metadata":{},"sourceType":"module"}