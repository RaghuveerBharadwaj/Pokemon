{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/cyclopz/Desktop/Cyclopz/My Personal Git/React-Native/Pokemon/views/CountryView.tsx\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport SvgUri from 'react-native-svg-uri';\nimport { connect } from 'react-redux';\nimport { getWeather } from \"../redux/actions/countryActions\";\nimport styles from \"../styles/styles\";\nvar button = styles.button,\n    buttonText = styles.buttonText,\n    bold = styles.bold,\n    pad = styles.pad;\n\nvar CountryView = function CountryView(props) {\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      detail = _React$useState2[0],\n      setDetail = _React$useState2[1];\n\n  return React.createElement(View, {\n    style: pad,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: pad,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, React.createElement(SvgUri, {\n    width: \"200\",\n    height: \"200\",\n    source: {\n      uri: props.country.flag\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: bold,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 15\n    }\n  }, \"Capital: \"), props.country.capital), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: bold,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 15\n    }\n  }, \"Population: \"), props.country.population), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: bold,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 15\n    }\n  }, \"Co-Ordinates: \"), props.country.latlng[0] + ', ' + props.country.latlng[1]), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: bold,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 15\n    }\n  }, \"Flag: \"), props.country.flag), React.createElement(TouchableOpacity, {\n    style: button,\n    onPress: function onPress() {\n      props.getWeather(props.country.capital);\n      setDetail(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: buttonText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 119\n    }\n  }, \"Capital Weather\"))), props.weather.location && detail && React.createElement(View, {\n    style: pad,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: bold,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, \"City: \"), props.weather.location.name), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: bold,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, \"Temperature: \"), props.weather.current.temperature, \" Celsius\"), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: bold,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, \"Wind Speed: \"), props.weather.current.wind_speed, \" m/s\"), React.createElement(Text, {\n    style: bold,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, \"Weather Icons: \"), props.weather.current.weather_icons.map(function (ico) {\n    return React.createElement(Image, {\n      key: ico,\n      source: {\n        uri: ico\n      },\n      style: {\n        height: 20,\n        width: 30\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    });\n  }), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: bold,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, \"Precipitation: \"), props.weather.current.precip, \" cm\")));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    country: state.contry.country,\n    weather: state.contry.weather\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getWeather: getWeather\n})(CountryView);","map":{"version":3,"sources":["/home/cyclopz/Desktop/Cyclopz/My Personal Git/React-Native/Pokemon/views/CountryView.tsx"],"names":["React","SvgUri","connect","getWeather","styles","button","buttonText","bold","pad","CountryView","props","useState","detail","setDetail","uri","country","flag","capital","population","latlng","weather","location","name","current","temperature","wind_speed","weather_icons","map","ico","height","width","precip","mapStateToProps","state","contry"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { View, Text, TouchableOpacity, Image } from 'react-native'\nimport SvgUri from 'react-native-svg-uri'\nimport { connect } from 'react-redux'\nimport { getWeather } from '../redux/actions/countryActions'\nimport styles from '../styles/styles'\n\nconst { button, buttonText, bold, pad } = styles\n\ntype Props = {\n  country: {\n    name: string\n    capital: string\n    population: string\n    latlng: string[]\n    flag: string\n  }\n  weather: {\n    request: any\n    location: any\n    current: any\n  }\n  getWeather: Function\n}\n\nconst CountryView = (props: Props) => {\n  const [detail, setDetail] = React.useState(false)\n  return (\n    <View style={pad}>\n      <View style={pad}>\n        <SvgUri\n          width=\"200\"\n          height=\"200\"\n          source={{ uri: props.country.flag }}\n        />\n        <Text><Text style={bold}>Capital: </Text>{props.country.capital}</Text>\n        <Text><Text style={bold}>Population: </Text>{props.country.population}</Text>\n        <Text><Text style={bold}>Co-Ordinates: </Text>{props.country.latlng[0] + ', ' + props.country.latlng[1]}</Text>\n        <Text><Text style={bold}>Flag: </Text>{props.country.flag}</Text>\n        <TouchableOpacity style={button} onPress={() => { props.getWeather(props.country.capital); setDetail(true) }}><Text style={buttonText}>Capital Weather</Text></TouchableOpacity>\n      </View>\n      {props.weather.location && detail &&\n        <View style={pad}>\n          <Text><Text style={bold}>City: </Text>{props.weather.location.name}</Text>\n          <Text><Text style={bold}>Temperature: </Text>{props.weather.current.temperature} Celsius</Text>\n          <Text><Text style={bold}>Wind Speed: </Text>{props.weather.current.wind_speed} m/s</Text>\n          <Text style={bold}>Weather Icons: </Text>{props.weather.current.weather_icons.map((ico: string) =>\n            <Image key={ico} source={{ uri: ico }} style={{ height: 20, width: 30 }} />\n          )}\n          <Text><Text style={bold}>Precipitation: </Text>{props.weather.current.precip} cm</Text>\n        </View>}\n\n    </View>\n  )\n}\n\nconst mapStateToProps = (state: any) => {\n  return {\n    country: state.contry.country,\n    weather: state.contry.weather\n  }\n}\n\nexport default connect(mapStateToProps, { getWeather })(CountryView)\n"]},"metadata":{},"sourceType":"module"}