{"ast":null,"code":"import axios from 'axios';\n\nvar getCountry = function getCountry(country, navigate) {\n  return function (dispatch) {\n    return axios.get('https://restcountries.eu/rest/v2/name/' + country).then(function (res) {\n      dispatch({\n        type: \"GET_COUNTRY\",\n        country: res.data[0]\n      });\n      navigate('CountryView');\n    }).catch(function (err) {\n      if (err.response) {\n        alert(err.response.data.message);\n      }\n    });\n  };\n};\n\nvar getWeather = function getWeather(weather) {\n  return function (dispatch) {\n    return axios.get('http://api.weatherstack.com/current?access_key=796c1bb6ac1987e064d4625e0a9227fd&query=' + weather).then(function (res) {\n      dispatch({\n        type: \"GET_WEATHER\",\n        weather: res.data\n      });\n    }).catch(function (err) {\n      if (err.response) {\n        alert(err.response.data.message);\n      }\n    });\n  };\n};\n\nexport { getCountry, getWeather };","map":{"version":3,"sources":["/home/cyclopz/Desktop/Cyclopz/My Personal Git/React-Native/Pokemon/redux/actions/countryActions.ts"],"names":["axios","getCountry","country","navigate","dispatch","get","then","res","type","data","catch","err","response","alert","message","getWeather","weather"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAGA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,OAAD,EAAkBC,QAAlB;AAAA,SAAyC,UAACC,QAAD,EAAwB;AAClF,WACEJ,KAAK,CACFK,GADH,CACO,2CAA2CH,OADlD,EAEGI,IAFH,CAEQ,UAACC,GAAD,EAAc;AAElBH,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAE,aADC;AAEPN,QAAAA,OAAO,EAAEK,GAAG,CAACE,IAAJ,CAAS,CAAT;AAFF,OAAD,CAAR;AAIAN,MAAAA,QAAQ,CAAC,aAAD,CAAR;AACD,KATH,EAUGO,KAVH,CAUS,UAACC,GAAD,EAAc;AACnB,UAAIA,GAAG,CAACC,QAAR,EAAkB;AAChBC,QAAAA,KAAK,CAACF,GAAG,CAACC,QAAJ,CAAaH,IAAb,CAAkBK,OAAnB,CAAL;AACD;AACF,KAdH,CADF;AAiBD,GAlBkB;AAAA,CAAnB;;AAoBA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,OAAD;AAAA,SAAqB,UAACZ,QAAD,EAAwB;AAC9D,WACEJ,KAAK,CACFK,GADH,CACO,2FAA2FW,OADlG,EAEGV,IAFH,CAEQ,UAACC,GAAD,EAAc;AAClBH,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAE,aADC;AAEPQ,QAAAA,OAAO,EAAET,GAAG,CAACE;AAFN,OAAD,CAAR;AAID,KAPH,EAQGC,KARH,CAQS,UAACC,GAAD,EAAc;AACnB,UAAIA,GAAG,CAACC,QAAR,EAAkB;AAChBC,QAAAA,KAAK,CAACF,GAAG,CAACC,QAAJ,CAAaH,IAAb,CAAkBK,OAAnB,CAAL;AACD;AACF,KAZH,CADF;AAeD,GAhBkB;AAAA,CAAnB;;AAkBA,SAASb,UAAT,EAAqBc,UAArB","sourcesContent":["import axios from 'axios'\nimport { Dispatch } from 'redux'\n\nconst getCountry = (country: string, navigate: Function) => (dispatch: Dispatch) => {\n  return (\n    axios\n      .get('https://restcountries.eu/rest/v2/name/' + country)\n      .then((res: any) => {\n        // alert(JSON.stringify(res.data[0], null, 4))\n        dispatch({\n          type: \"GET_COUNTRY\",\n          country: res.data[0]\n        })\n        navigate('CountryView')\n      })\n      .catch((err: any) => {\n        if (err.response) {\n          alert(err.response.data.message)\n        }\n      })\n  )\n}\n\nconst getWeather = (weather: string) => (dispatch: Dispatch) => {\n  return (\n    axios\n      .get('http://api.weatherstack.com/current?access_key=796c1bb6ac1987e064d4625e0a9227fd&query=' + weather)\n      .then((res: any) => {\n        dispatch({\n          type: \"GET_WEATHER\",\n          weather: res.data\n        })\n      })\n      .catch((err: any) => {\n        if (err.response) {\n          alert(err.response.data.message)\n        }\n      })\n  )\n}\n\nexport { getCountry, getWeather }"]},"metadata":{},"sourceType":"module"}