{"ast":null,"code":"import React, { useMemo } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport LinearGradient from 'react-native-linear-gradient';\nimport { AnimatedImageBackground } from \"./animatedImageBackground\";\nimport { stretchyImageStyles as styles } from \"./styles\";\nexport var StretchyImage = function StretchyImage(_ref) {\n  var animation = _ref.animation,\n      gradient = _ref.gradient,\n      image = _ref.image,\n      imageResizeMode = _ref.imageResizeMode,\n      imageWrapperStyle = _ref.imageWrapperStyle,\n      imageHeight = _ref.imageHeight,\n      onLayout = _ref.onLayout;\n  var transformStyles = useMemo(function () {\n    return {\n      transform: [{\n        translateY: animation.interpolate({\n          inputRange: [-imageHeight, 0, imageHeight],\n          outputRange: [imageHeight / 2, 0, -imageHeight / 2]\n        })\n      }, {\n        scale: animation.interpolate({\n          inputRange: [-imageHeight, 0, imageHeight],\n          outputRange: [2, 1, 1]\n        })\n      }]\n    };\n  }, [animation, imageHeight]);\n  return React.createElement(View, {\n    style: [imageWrapperStyle, styles.wrapper, {\n      height: imageHeight\n    }],\n    onLayout: onLayout\n  }, React.createElement(AnimatedImageBackground, {\n    source: image || {},\n    resizeMode: imageResizeMode,\n    style: [styles.animatedImageBackground, transformStyles]\n  }, !!gradient && React.createElement(LinearGradient, {\n    style: {\n      flex: 1\n    },\n    colors: gradient.colors,\n    start: gradient.start,\n    end: gradient.end,\n    locations: gradient.locations\n  })));\n};","map":{"version":3,"sources":["/home/cyclopz/Desktop/Cyclopz/My Personal Git/React-Native/Pokemon/node_modules/react-native-stretchy/lib/dist/components/stretchyImage.js"],"names":["React","useMemo","LinearGradient","AnimatedImageBackground","stretchyImageStyles","styles","StretchyImage","animation","gradient","image","imageResizeMode","imageWrapperStyle","imageHeight","onLayout","transformStyles","transform","translateY","interpolate","inputRange","outputRange","scale","createElement","View","style","wrapper","height","source","resizeMode","animatedImageBackground","flex","colors","start","end","locations"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;;AAEA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,SAASC,uBAAT;AACA,SAASC,mBAAmB,IAAIC,MAAhC;AACA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAAgG;AAAA,MAA7FC,SAA6F,QAA7FA,SAA6F;AAAA,MAAlFC,QAAkF,QAAlFA,QAAkF;AAAA,MAAxEC,KAAwE,QAAxEA,KAAwE;AAAA,MAAjEC,eAAiE,QAAjEA,eAAiE;AAAA,MAAhDC,iBAAgD,QAAhDA,iBAAgD;AAAA,MAA7BC,WAA6B,QAA7BA,WAA6B;AAAA,MAAhBC,QAAgB,QAAhBA,QAAgB;AACzH,MAAMC,eAAe,GAAGb,OAAO,CAAC;AAAA,WAAO;AACnCc,MAAAA,SAAS,EAAE,CACP;AACIC,QAAAA,UAAU,EAAET,SAAS,CAACU,WAAV,CAAsB;AAC9BC,UAAAA,UAAU,EAAE,CAAC,CAACN,WAAF,EAAe,CAAf,EAAkBA,WAAlB,CADkB;AAE9BO,UAAAA,WAAW,EAAE,CAACP,WAAW,GAAG,CAAf,EAAkB,CAAlB,EAAqB,CAACA,WAAD,GAAe,CAApC;AAFiB,SAAtB;AADhB,OADO,EAOP;AACIQ,QAAAA,KAAK,EAAEb,SAAS,CAACU,WAAV,CAAsB;AACzBC,UAAAA,UAAU,EAAE,CAAC,CAACN,WAAF,EAAe,CAAf,EAAkBA,WAAlB,CADa;AAEzBO,UAAAA,WAAW,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP;AAFY,SAAtB;AADX,OAPO;AADwB,KAAP;AAAA,GAAD,EAe3B,CAACZ,SAAD,EAAYK,WAAZ,CAf2B,CAA/B;AAgBA,SAAQZ,KAAK,CAACqB,aAAN,CAAoBC,IAApB,EAA0B;AAAEC,IAAAA,KAAK,EAAE,CAACZ,iBAAD,EAAoBN,MAAM,CAACmB,OAA3B,EAAoC;AAAEC,MAAAA,MAAM,EAAEb;AAAV,KAApC,CAAT;AAAuEC,IAAAA,QAAQ,EAAEA;AAAjF,GAA1B,EACJb,KAAK,CAACqB,aAAN,CAAoBlB,uBAApB,EAA6C;AAAEuB,IAAAA,MAAM,EAAEjB,KAAK,IAAI,EAAnB;AAAuBkB,IAAAA,UAAU,EAAEjB,eAAnC;AAAoDa,IAAAA,KAAK,EAAE,CAAClB,MAAM,CAACuB,uBAAR,EAAiCd,eAAjC;AAA3D,GAA7C,EAA6J,CAAC,CAACN,QAAF,IAAeR,KAAK,CAACqB,aAAN,CAAoBnB,cAApB,EAAoC;AAAEqB,IAAAA,KAAK,EAAE;AAAEM,MAAAA,IAAI,EAAE;AAAR,KAAT;AAAsBC,IAAAA,MAAM,EAAEtB,QAAQ,CAACsB,MAAvC;AAA+CC,IAAAA,KAAK,EAAEvB,QAAQ,CAACuB,KAA/D;AAAsEC,IAAAA,GAAG,EAAExB,QAAQ,CAACwB,GAApF;AAAyFC,IAAAA,SAAS,EAAEzB,QAAQ,CAACyB;AAA7G,GAApC,CAA5K,CADI,CAAR;AAEH,CAnBM","sourcesContent":["import React, { useMemo } from 'react';\nimport { View } from 'react-native';\nimport LinearGradient from 'react-native-linear-gradient';\nimport { AnimatedImageBackground } from './animatedImageBackground';\nimport { stretchyImageStyles as styles } from './styles';\nexport const StretchyImage = ({ animation, gradient, image, imageResizeMode, imageWrapperStyle, imageHeight, onLayout, }) => {\n    const transformStyles = useMemo(() => ({\n        transform: [\n            {\n                translateY: animation.interpolate({\n                    inputRange: [-imageHeight, 0, imageHeight],\n                    outputRange: [imageHeight / 2, 0, -imageHeight / 2],\n                }),\n            },\n            {\n                scale: animation.interpolate({\n                    inputRange: [-imageHeight, 0, imageHeight],\n                    outputRange: [2, 1, 1],\n                }),\n            },\n        ],\n    }), [animation, imageHeight]);\n    return (React.createElement(View, { style: [imageWrapperStyle, styles.wrapper, { height: imageHeight }], onLayout: onLayout },\n        React.createElement(AnimatedImageBackground, { source: image || {}, resizeMode: imageResizeMode, style: [styles.animatedImageBackground, transformStyles] }, !!gradient && (React.createElement(LinearGradient, { style: { flex: 1 }, colors: gradient.colors, start: gradient.start, end: gradient.end, locations: gradient.locations })))));\n};\n"]},"metadata":{},"sourceType":"module"}