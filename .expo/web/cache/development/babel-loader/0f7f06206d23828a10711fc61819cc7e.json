{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/cyclopz/Desktop/Cyclopz/My Personal Git/React-Native/Pokemon/views/DishDetail.tsx\";\nimport React from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { connect } from 'react-redux';\n\nvar DishDetail = function DishDetail(props) {\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  return React.createElement(ScrollView, {\n    horizontal: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      width: Dimensions.get('screen').width,\n      height: Dimensions.get('screen').height / (open ? 2 : 4)\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    source: {\n      uri: props.detail.Images[0].image\n    },\n    style: {\n      height: Dimensions.get('screen').height / (open ? 2 : 4)\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: {\n      width: Dimensions.get('screen').width,\n      height: Dimensions.get('screen').height / (open ? 2 : 4)\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    source: {\n      uri: props.detail.Images[0].image\n    },\n    style: {\n      height: Dimensions.get('screen').height / (open ? 2 : 4)\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: {\n      width: Dimensions.get('screen').width,\n      height: Dimensions.get('screen').height / (open ? 2 : 4)\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    source: {\n      uri: props.detail.Images[0].image\n    },\n    style: {\n      height: Dimensions.get('screen').height / (open ? 2 : 4)\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  })));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    detail: state.dish.detail\n  };\n};\n\nexport default connect(mapStateToProps)(DishDetail);","map":{"version":3,"sources":["/home/cyclopz/Desktop/Cyclopz/My Personal Git/React-Native/Pokemon/views/DishDetail.tsx"],"names":["React","connect","DishDetail","props","useState","open","setOpen","width","Dimensions","get","height","uri","detail","Images","image","mapStateToProps","state","dish"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Image, Dimensions, ScrollView, View } from 'react-native'\nimport { connect } from 'react-redux'\n\ntype Props = {\n  detail: any\n}\n\nconst DishDetail = (props: Props) => {\n  const [open, setOpen] = React.useState(true)\n  return (\n    <ScrollView\n      horizontal\n    >\n      <View style={{ \n        width: Dimensions.get('screen').width,\n        height: Dimensions.get('screen').height / (open ? 2 : 4) }}>\n        <Image\n          source={{ uri: props.detail.Images[0].image }}\n          style={{ height: Dimensions.get('screen').height / (open ? 2 : 4) }}\n        />\n      </View>\n      <View style={{ \n        width: Dimensions.get('screen').width,\n        height: Dimensions.get('screen').height / (open ? 2 : 4) }}>\n        <Image\n          source={{ uri: props.detail.Images[0].image }}\n          style={{ height: Dimensions.get('screen').height / (open ? 2 : 4) }}\n        />\n      </View>\n      <View style={{ \n        width: Dimensions.get('screen').width,\n        height: Dimensions.get('screen').height / (open ? 2 : 4) }}>\n        <Image\n          source={{ uri: props.detail.Images[0].image }}\n          style={{ height: Dimensions.get('screen').height / (open ? 2 : 4) }}\n        />\n      </View>\n    </ScrollView>\n  )\n}\n\nconst mapStateToProps = (state: any) => {\n  return {\n    detail: state.dish.detail\n  }\n}\n\nexport default connect(mapStateToProps)(DishDetail)\n"]},"metadata":{},"sourceType":"module"}