{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar initialState = {\n  dishes: [],\n  detail: {},\n  bgrdImage: ''\n};\n\nvar dishReducer = function dishReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"GET_DISHES\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        dishes: action.dishes\n      });\n\n    case \"GET_DISH_DETAIL\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        detail: action.detail,\n        bgrdImage: action.detail.Images[0].image\n      });\n\n    default:\n      return _objectSpread({}, state);\n  }\n};\n\nexport default dishReducer;","map":{"version":3,"sources":["/home/cyclopz/Desktop/Cyclopz/My Personal Git/React-Native/Pokemon/redux/reducers/dishReducers.ts"],"names":["initialState","dishes","detail","bgrdImage","dishReducer","state","action","type","Images","image"],"mappings":";;;;;;AAAA,IAAMA,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,EADW;AAEnBC,EAAAA,MAAM,EAAE,EAFW;AAGnBC,EAAAA,SAAS,EAAE;AAHQ,CAArB;;AAMA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAuC;AAAA,MAAtCC,KAAsC,uEAA9BL,YAA8B;AAAA,MAAhBM,MAAgB;;AACzD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,YAAL;AACE,6CACKF,KADL;AAEEJ,QAAAA,MAAM,EAAEK,MAAM,CAACL;AAFjB;;AAIF,SAAK,iBAAL;AACE,6CACKI,KADL;AAEEH,QAAAA,MAAM,EAAEI,MAAM,CAACJ,MAFjB;AAGEC,QAAAA,SAAS,EAAEG,MAAM,CAACJ,MAAP,CAAcM,MAAd,CAAqB,CAArB,EAAwBC;AAHrC;;AAKF;AACE,+BACKJ,KADL;AAbJ;AAiBD,CAlBD;;AAoBA,eAAeD,WAAf","sourcesContent":["const initialState = {\n  dishes: [],\n  detail: {},\n  bgrdImage: ''\n}\n\nconst dishReducer = (state = initialState, action: any) => {\n  switch (action.type) {\n    case \"GET_DISHES\": \n      return {\n        ...state,\n        dishes: action.dishes\n      }\n    case \"GET_DISH_DETAIL\": \n      return {\n        ...state,\n        detail: action.detail,\n        bgrdImage: action.detail.Images[0].image\n      }\n    default: \n      return {\n        ...state\n      }\n  }\n}\n\nexport default dishReducer\n"]},"metadata":{},"sourceType":"module"}