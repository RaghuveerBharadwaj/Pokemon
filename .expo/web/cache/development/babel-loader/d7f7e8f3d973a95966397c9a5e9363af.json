{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/cyclopz/Desktop/Cyclopz/My Personal Git/React-Native/Pokemon/views/Dishes.tsx\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { connect } from 'react-redux';\nimport { getPokemons } from \"../redux/actions/pokeActions\";\nimport { getDishes } from \"../redux/actions/dishActions\";\nimport styles from \"../styles/styles\";\nvar button = styles.button,\n    buttonText = styles.buttonText,\n    textInput = styles.textInput,\n    pad = styles.pad;\n\nvar Dishes = function Dishes(props) {\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      dish = _React$useState2[0],\n      setDish = _React$useState2[1];\n\n  React.useEffect(function () {\n    props.getDishes();\n  }, []);\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, React.createElement(TextInput, {\n    style: textInput,\n    placeholder: \"Enter Dishes\",\n    value: dish,\n    onChangeText: function onChangeText(text) {\n      return setDish(text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }), React.createElement(ScrollView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      flexDirection: 'row',\n      flexWrap: 'wrap',\n      margin: 'auto'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, props.dishes.map(function (dis) {\n    return dis.name.toLowerCase().includes(dish.toLowerCase()) && React.createElement(View, {\n      key: dis.name,\n      style: {\n        padding: 5,\n        alignItems: 'center',\n        borderRadius: 5,\n        width: '50%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      style: {\n        backgroundColor: 'white',\n        width: '100%',\n        height: 220\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 15\n      }\n    }, React.createElement(Image, {\n      resizeMode: \"cover\",\n      style: {\n        borderRadius: 5,\n        width: '100%',\n        height: 180\n      },\n      source: {\n        uri: dis.Images[0].image\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }), React.createElement(Text, {\n      style: {\n        width: '100%',\n        padding: 10,\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }, dis.name)));\n  }))));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    pokemons: state.poke.pokemons,\n    dishes: state.dish.dishes\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getPokemons: getPokemons,\n  getDishes: getDishes\n})(Dishes);","map":{"version":3,"sources":["/home/cyclopz/Desktop/Cyclopz/My Personal Git/React-Native/Pokemon/views/Dishes.tsx"],"names":["React","connect","getPokemons","getDishes","styles","button","buttonText","textInput","pad","Dishes","props","useState","dish","setDish","useEffect","text","flex","flexDirection","flexWrap","margin","dishes","map","dis","name","toLowerCase","includes","padding","alignItems","borderRadius","width","backgroundColor","height","uri","Images","image","textAlign","mapStateToProps","state","pokemons","poke"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { View, ScrollView, Text, TextInput, TouchableOpacity, Image, Dimensions } from 'react-native'\nimport { connect } from 'react-redux'\nimport { getPokemons } from '../redux/actions/pokeActions'\nimport { getDishes } from '../redux/actions/dishActions'\nimport styles from '../styles/styles'\n\nconst { button, buttonText, textInput, pad } = styles\n\ntype Props = {\n  getPokemons: Function\n  getDishes: Function\n  dishes: Array<any>\n  navigation: { navigate: Function }\n}\n\nconst Dishes = (props: Props) => {\n\n  const [dish, setDish] = React.useState('')\n\n  React.useEffect(() => {\n    props.getDishes()\n  }, [])\n\n  return (\n    <View>\n      <TextInput\n        style={textInput}\n        placeholder='Enter Dishes'\n        value={dish}\n        onChangeText={(text: string) => setDish(text)} />\n      <ScrollView>\n        <View style={{\n          flex: 1,\n          flexDirection: 'row',\n          flexWrap: 'wrap',\n          margin: 'auto'\n        }}>\n          {props.dishes.map(dis =>\n            dis.name.toLowerCase().includes(dish.toLowerCase()) &&\n            <View\n              key={dis.name}\n              style={{\n                padding: 5,\n                alignItems: 'center',\n                borderRadius: 5,\n                width: '50%'\n              }}>\n              <View\n                style={{\n                  backgroundColor: 'white',\n                  width: '100%',\n                  height: 220\n                }}>\n                <Image\n                  resizeMode='cover'\n                  style={{\n                    borderRadius: 5,\n                    width: '100%',\n                    height: 180\n                  }}\n                  source={{ uri: dis.Images[0].image }} />\n                <Text\n                  style={{\n                    width: '100%',\n                    padding: 10,\n                    textAlign: 'center'\n                  }}>\n                  {dis.name}\n                </Text>\n              </View>\n            </View>\n          )}\n        </View>\n      </ScrollView>\n    </View>\n  )\n}\n\nconst mapStateToProps = (state: any) => {\n  return {\n    pokemons: state.poke.pokemons,\n    dishes: state.dish.dishes\n  }\n}\n\nexport default connect(mapStateToProps, { getPokemons, getDishes })(Dishes)\n"]},"metadata":{},"sourceType":"module"}