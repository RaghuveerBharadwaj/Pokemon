{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useCallback } from 'react';\nimport { useImageWrapperLayout } from \"./useImageWrapperLayout\";\nimport { useStretchyAnimation } from \"./useStretchyAnimation\";\nexport var useOnScrollHandle = function useOnScrollHandle(listener) {\n  var _useImageWrapperLayou = useImageWrapperLayout(),\n      _useImageWrapperLayou2 = _slicedToArray(_useImageWrapperLayou, 2),\n      imageWrapperLayout = _useImageWrapperLayou2[0],\n      onImageWrapperLayout = _useImageWrapperLayou2[1];\n\n  var animationListener = useCallback(function (offsetY) {\n    if (listener) {\n      if (imageWrapperLayout && offsetY >= (imageWrapperLayout == null ? void 0 : imageWrapperLayout.height)) {\n        listener(offsetY, true);\n      } else {\n        listener(offsetY, false);\n      }\n    }\n  }, [imageWrapperLayout]);\n\n  var _useStretchyAnimation = useStretchyAnimation(animationListener),\n      animation = _useStretchyAnimation.animation,\n      onAnimationEvent = _useStretchyAnimation.onAnimationEvent;\n\n  return {\n    animation: animation,\n    onImageWrapperLayout: onImageWrapperLayout,\n    onScroll: onAnimationEvent\n  };\n};","map":{"version":3,"sources":["/home/cyclopz/Desktop/Cyclopz/My Personal Git/React-Native/Pokemon/node_modules/react-native-stretchy/lib/dist/hooks/useOnScrollHandle.js"],"names":["useCallback","useImageWrapperLayout","useStretchyAnimation","useOnScrollHandle","listener","imageWrapperLayout","onImageWrapperLayout","animationListener","offsetY","height","animation","onAnimationEvent","onScroll"],"mappings":";AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAASC,qBAAT;AACA,SAASC,oBAAT;AACA,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,QAAD,EAAc;AAAA,8BACQH,qBAAqB,EAD7B;AAAA;AAAA,MACpCI,kBADoC;AAAA,MAChBC,oBADgB;;AAE3C,MAAMC,iBAAiB,GAAGP,WAAW,CAAC,UAACQ,OAAD,EAAa;AAC/C,QAAIJ,QAAJ,EAAc;AACV,UAAIC,kBAAkB,IAAIG,OAAO,KAAIH,kBAAJ,oBAAIA,kBAAkB,CAAEI,MAAxB,CAAjC,EAAiE;AAC7DL,QAAAA,QAAQ,CAACI,OAAD,EAAU,IAAV,CAAR;AACH,OAFD,MAGK;AACDJ,QAAAA,QAAQ,CAACI,OAAD,EAAU,KAAV,CAAR;AACH;AACJ;AACJ,GAToC,EASlC,CAACH,kBAAD,CATkC,CAArC;;AAF2C,8BAYHH,oBAAoB,CAACK,iBAAD,CAZjB;AAAA,MAYnCG,SAZmC,yBAYnCA,SAZmC;AAAA,MAYxBC,gBAZwB,yBAYxBA,gBAZwB;;AAa3C,SAAO;AACHD,IAAAA,SAAS,EAATA,SADG;AAEHJ,IAAAA,oBAAoB,EAApBA,oBAFG;AAGHM,IAAAA,QAAQ,EAAED;AAHP,GAAP;AAKH,CAlBM","sourcesContent":["import { useCallback } from 'react';\nimport { useImageWrapperLayout } from './useImageWrapperLayout';\nimport { useStretchyAnimation } from './useStretchyAnimation';\nexport const useOnScrollHandle = (listener) => {\n    const [imageWrapperLayout, onImageWrapperLayout] = useImageWrapperLayout();\n    const animationListener = useCallback((offsetY) => {\n        if (listener) {\n            if (imageWrapperLayout && offsetY >= imageWrapperLayout?.height) {\n                listener(offsetY, true);\n            }\n            else {\n                listener(offsetY, false);\n            }\n        }\n    }, [imageWrapperLayout]);\n    const { animation, onAnimationEvent } = useStretchyAnimation(animationListener);\n    return {\n        animation,\n        onImageWrapperLayout,\n        onScroll: onAnimationEvent,\n    };\n};\n"]},"metadata":{},"sourceType":"module"}