{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/cyclopz/Desktop/Cyclopz/My Personal Git/React-Native/Pokemon/views/Dishes.tsx\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { connect, useDispatch } from 'react-redux';\nimport { getDishes } from \"../redux/actions/dishActions\";\n\nvar Dishes = function Dishes(props) {\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      dish = _React$useState2[0],\n      setDish = _React$useState2[1];\n\n  React.useEffect(function () {\n    props.getDishes();\n  }, []);\n  var dispatch = useDispatch();\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, React.createElement(TextInput, {\n    style: {\n      margin: 10,\n      borderWidth: 1,\n      borderRadius: 3,\n      borderColor: '#00A24A',\n      paddingHorizontal: 15,\n      paddingVertical: 5,\n      backgroundColor: 'white'\n    },\n    placeholder: \"Search Dishes\",\n    value: dish,\n    onChangeText: function onChangeText(text) {\n      return setDish(text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }), React.createElement(ScrollView, {\n    style: {\n      height: '90%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      flexDirection: 'row',\n      flexWrap: 'wrap',\n      padding: 5,\n      height: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, props.dishes.map(function (dis) {\n    return dis.name.toLowerCase().includes(dish.toLowerCase()) && React.createElement(View, {\n      key: dis.name,\n      onTouchEndCapture: function onTouchEndCapture() {\n        dispatch({\n          type: 'GET_DISH_DETAIL',\n          detail: dis\n        });\n        props.navigation.navigate('DishDetail');\n      },\n      style: {\n        padding: 5,\n        alignItems: 'center',\n        borderRadius: 5,\n        width: '50%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      style: {\n        backgroundColor: 'white',\n        width: '100%',\n        height: 280,\n        borderRadius: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 15\n      }\n    }, React.createElement(Image, {\n      resizeMode: \"cover\",\n      style: {\n        borderRadius: 5,\n        width: '100%',\n        height: 220\n      },\n      source: {\n        uri: dis.Images[0].image\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }), React.createElement(Text, {\n      style: {\n        width: '100%',\n        padding: 10,\n        fontWeight: 'bold',\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }, dis.name)));\n  }))));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    dishes: state.dish.dishes\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getDishes: getDishes\n})(Dishes);","map":{"version":3,"sources":["/home/cyclopz/Desktop/Cyclopz/My Personal Git/React-Native/Pokemon/views/Dishes.tsx"],"names":["React","connect","useDispatch","getDishes","Dishes","props","useState","dish","setDish","useEffect","dispatch","margin","borderWidth","borderRadius","borderColor","paddingHorizontal","paddingVertical","backgroundColor","text","height","flex","flexDirection","flexWrap","padding","dishes","map","dis","name","toLowerCase","includes","type","detail","navigation","navigate","alignItems","width","uri","Images","image","fontWeight","textAlign","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { View, ScrollView, Text, TextInput, Image } from 'react-native'\nimport { connect, useDispatch } from 'react-redux'\nimport { getDishes } from '../redux/actions/dishActions'\n\ntype Props = {\n  getDishes: Function\n  dishes: Array<any>\n  navigation: { navigate: Function }\n}\n\nconst Dishes = (props: Props) => {\n\n  const [dish, setDish] = React.useState('')\n\n  React.useEffect(() => {\n    props.getDishes()\n  }, [])\n\n  const dispatch = useDispatch()\n\n  return (\n    <View>\n      <TextInput\n        style={{\n          margin: 10,\n          borderWidth: 1,\n          borderRadius: 3,\n          borderColor: '#00A24A',\n          paddingHorizontal: 15,\n          paddingVertical: 5,\n          backgroundColor: 'white'\n        }}\n        placeholder='Search Dishes'\n        value={dish}\n        onChangeText={(text: string) => setDish(text)} />\n      <ScrollView style={{\n        height: '90%'\n      }}>\n        <View\n          style={{\n            flex: 1,\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n            padding: 5,\n            height: '100%'\n          }}>\n          {props.dishes.map(dis =>\n            dis.name.toLowerCase().includes(dish.toLowerCase()) &&\n            <View\n              key={dis.name}\n              onTouchEndCapture={() => {\n                dispatch({\n                  type: 'GET_DISH_DETAIL',\n                  detail: dis\n                })\n                props.navigation.navigate('DishDetail')\n              }}\n              style={{\n                padding: 5,\n                alignItems: 'center',\n                borderRadius: 5,\n                width: '50%'\n              }}>\n              <View\n                style={{\n                  backgroundColor: 'white',\n                  width: '100%',\n                  height: 280,\n                  borderRadius: 5\n                }}>\n                <Image\n                  resizeMode='cover'\n                  style={{\n                    borderRadius: 5,\n                    width: '100%',\n                    height: 220\n                  }}\n                  source={{ uri: dis.Images[0].image }} />\n                <Text\n                  style={{\n                    width: '100%',\n                    padding: 10,\n                    fontWeight: 'bold',\n                    textAlign: 'center'\n                  }}>\n                  {dis.name}\n                </Text>\n              </View>\n            </View>\n          )}\n        </View>\n      </ScrollView>\n    </View>\n  )\n}\n\nconst mapStateToProps = (state: any) => {\n  return {\n    dishes: state.dish.dishes\n  }\n}\n\nexport default connect(mapStateToProps, { getDishes })(Dishes)\n"]},"metadata":{},"sourceType":"module"}