{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from 'axios';\n\nvar getDishes = function getDishes() {\n  return function (dispatch) {\n    return axios.get(\"https://api-next.pranaafood.com/v1/admin/get_dishes\", {\n      headers: {\n        Authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjAwMUEiLCJlbWFpbCI6ImFkbWluQHByYW5hYWZvb2QuY29tIiwicGhvbmUiOm51bGwsImxhbmd1YWdlIjoiZW5nbGlzaCIsInJvbGUiOiJhZG1pbiIsInRpbWUiOiI3LzEvMjAyMCwgNjowMjozNyBQTSIsImlhdCI6MTU5MzYwMTM1N30.Koe3cVeBeS4ki9RZybaRNq3F-17QOgcJHqzDi16crn8'\n      }\n    }).then(function _callee2(res) {\n      var pokemons;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(Promise.all(res.data.results.map(function _callee(poke) {\n                return _regeneratorRuntime.async(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        _context.next = 2;\n                        return _regeneratorRuntime.awrap(getPokemon(poke.url));\n\n                      case 2:\n                        return _context.abrupt(\"return\", _context.sent);\n\n                      case 3:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, null, null, null, Promise);\n              })));\n\n            case 2:\n              pokemons = _context2.sent;\n              console.log(pokemons);\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }).catch(function (err) {\n      if (err.response) {\n        alert(err.response.data.message);\n      }\n    });\n  };\n};\n\nexport { getDishes };","map":{"version":3,"sources":["/home/cyclopz/Desktop/Cyclopz/My Personal Git/React-Native/Pokemon/redux/actions/dishActions.ts"],"names":["axios","getDishes","dispatch","get","headers","Authorization","then","res","Promise","all","data","results","map","poke","getPokemon","url","pokemons","console","log","catch","err","response","alert","message"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAGA,IAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA,SAAM,UAACC,QAAD,EAAwB;AAC9C,WACEF,KAAK,CACFG,GADH,wDAC8D;AAC1DC,MAAAA,OAAO,EAAE;AAACC,QAAAA,aAAa,EAAE;AAAhB;AADiD,KAD9D,EAIGC,IAJH,CAIQ,kBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACmBC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAJ,CAASC,OAAT,CAAiBC,GAAjB,CAAqB,iBAAOC,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yDAA2BC,UAAU,CAACD,IAAI,CAACE,GAAN,CAArC;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAArB,CAAZ,CADnB;;AAAA;AACEC,cAAAA,QADF;AAEJC,cAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;;AAFI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAJR,EAQGG,KARH,CAQS,UAACC,GAAD,EAAc;AACnB,UAAIA,GAAG,CAACC,QAAR,EAAkB;AAChBC,QAAAA,KAAK,CAACF,GAAG,CAACC,QAAJ,CAAaX,IAAb,CAAkBa,OAAnB,CAAL;AACD;AACF,KAZH,CADF;AAeD,GAhBiB;AAAA,CAAlB;;AAkBA,SAAStB,SAAT","sourcesContent":["import axios from 'axios'\nimport { Dispatch } from 'redux'\n\nconst getDishes = () => (dispatch: Dispatch) => {\n  return (\n    axios\n      .get(`https://api-next.pranaafood.com/v1/admin/get_dishes`, {\n        headers: {Authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjAwMUEiLCJlbWFpbCI6ImFkbWluQHByYW5hYWZvb2QuY29tIiwicGhvbmUiOm51bGwsImxhbmd1YWdlIjoiZW5nbGlzaCIsInJvbGUiOiJhZG1pbiIsInRpbWUiOiI3LzEvMjAyMCwgNjowMjozNyBQTSIsImlhdCI6MTU5MzYwMTM1N30.Koe3cVeBeS4ki9RZybaRNq3F-17QOgcJHqzDi16crn8'}\n      })\n      .then(async (res: any) => {\n        const pokemons = await Promise.all(res.data.results.map(async (poke: any) => await getPokemon(poke.url)))\n        console.log(pokemons)\n      })\n      .catch((err: any) => {\n        if (err.response) {\n          alert(err.response.data.message)\n        }\n      })\n  )\n}\n\nexport { getDishes }"]},"metadata":{},"sourceType":"module"}