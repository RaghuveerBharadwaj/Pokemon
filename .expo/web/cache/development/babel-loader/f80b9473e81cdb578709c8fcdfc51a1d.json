{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/cyclopz/Desktop/Cyclopz/My Personal Git/React-Native/Pokemon/views/DishDetail.tsx\";\nimport React from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { connect } from 'react-redux';\nimport { SvgUri } from 'react-native-svg';\n\nvar DishDetail = function DishDetail(props) {\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  var posAnim = React.useRef(new Animated.Value(Dimensions.get('screen').height / 1.5 - (open ? 30 : Dimensions.get('screen').height / 1.9))).current;\n\n  var setPosition = function setPosition() {\n    setOpen(!open);\n    Animated.timing(posAnim, {\n      toValue: Dimensions.get('screen').height / 1.5 - (open ? Dimensions.get('screen').height / 1.9 : 30),\n      duration: 500\n    }).start();\n  };\n\n  var arrayMaker = function arrayMaker(hot) {\n    var myArray = [];\n\n    for (var index = 0; index < hot; index++) {\n      myArray.push(index);\n    }\n\n    return myArray;\n  };\n\n  return React.createElement(View, {\n    style: {\n      position: 'relative'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    style: {\n      position: 'absolute'\n    },\n    horizontal: true,\n    pagingEnabled: true,\n    showsHorizontalScrollIndicator: true,\n    scrollEventThrottle: 200,\n    decelerationRate: \"fast\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, props.detail.Images.map(function (gallery) {\n    return React.createElement(View, {\n      key: gallery.image,\n      style: {\n        width: Dimensions.get('screen').width,\n        height: Dimensions.get('screen').height / 1.5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 66\n      }\n    }, React.createElement(Image, {\n      source: {\n        uri: gallery.image\n      },\n      style: {\n        height: Dimensions.get('screen').height / 1.5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }));\n  })), React.createElement(Animated.View, {\n    onTouchEndCapture: function onTouchEndCapture() {\n      setPosition();\n    },\n    style: {\n      padding: 30,\n      position: \"relative\",\n      backgroundColor: \"white\",\n      width: Dimensions.get('screen').width,\n      top: posAnim,\n      borderTopStartRadius: 30,\n      borderTopEndRadius: 30,\n      height: Dimensions.get('screen').height\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 26,\n      fontWeight: 'bold'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, props.detail.name), React.createElement(Text, {\n    style: {\n      color: '#00A24A',\n      fontSize: 18,\n      fontWeight: '700',\n      marginBottom: 25,\n      marginRight: 30\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, props.detail.category.toString().toUpperCase()), React.createElement(Text, {\n    style: {\n      fontSize: 18,\n      fontWeight: '700'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, \"Spiciness\"), React.createElement(View, {\n    style: {\n      display: \"flex\",\n      flexDirection: 'row',\n      marginBottom: 25,\n      height: 30\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, arrayMaker(props.detail.hot).map(function (spicy) {\n    return React.createElement(SvgUri, {\n      key: spicy,\n      width: 30,\n      height: 30,\n      uri: \"https://pranaa-frontend-assets.s3-ap-southeast-1.amazonaws.com/static/icons/chilly.svg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    });\n  })), React.createElement(Text, {\n    style: {\n      fontSize: 18,\n      fontWeight: '700'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, \"Description\"), React.createElement(Text, {\n    style: {\n      fontSize: 16,\n      marginBottom: 25\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, props.detail.description), React.createElement(Text, {\n    style: {\n      fontSize: 18,\n      fontWeight: '700'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, \"Ingredients\"), React.createElement(Text, {\n    style: {\n      fontSize: 16,\n      marginBottom: 25\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, props.detail.ingredients), React.createElement(Text, {\n    style: {\n      fontSize: 18,\n      fontWeight: '700'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }, \"Nutritional Information\"), React.createElement(Text, {\n    style: {\n      fontSize: 16\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }\n  }, props.detail.nutrition.split(',')[0]), React.createElement(Text, {\n    style: {\n      fontSize: 16,\n      marginBottom: 25\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  }, props.detail.nutrition.split(',')[1]), React.createElement(Text, {\n    style: {\n      fontSize: 18,\n      fontWeight: '700'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }\n  }, \"Allergens\"), React.createElement(View, {\n    style: {\n      marginBottom: 25\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }\n  }, props.detail.Allergens.map(function (all) {\n    return React.createElement(View, {\n      key: all.id,\n      style: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginTop: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 13\n      }\n    }, React.createElement(Image, {\n      style: {\n        width: 30,\n        height: 30,\n        borderRadius: 10,\n        marginEnd: 10\n      },\n      width: 30,\n      height: 30,\n      source: {\n        uri: all.allergenImage\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 15\n      }\n    }), React.createElement(Text, {\n      style: {\n        fontSize: 16\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 15\n      }\n    }, all.allergenName));\n  }))));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    detail: state.dish.detail\n  };\n};\n\nexport default connect(mapStateToProps)(DishDetail);","map":{"version":3,"sources":["/home/cyclopz/Desktop/Cyclopz/My Personal Git/React-Native/Pokemon/views/DishDetail.tsx"],"names":["React","connect","SvgUri","DishDetail","props","useState","open","setOpen","posAnim","useRef","Animated","Value","Dimensions","get","height","current","setPosition","timing","toValue","duration","start","arrayMaker","hot","myArray","index","push","position","detail","Images","map","gallery","image","width","uri","padding","backgroundColor","top","borderTopStartRadius","borderTopEndRadius","fontSize","fontWeight","name","color","marginBottom","marginRight","category","toString","toUpperCase","display","flexDirection","spicy","description","ingredients","nutrition","split","Allergens","all","id","alignItems","marginTop","borderRadius","marginEnd","allergenImage","allergenName","mapStateToProps","state","dish"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Image, Dimensions, ScrollView, Text, View, Animated } from 'react-native'\nimport { connect } from 'react-redux'\nimport { SvgUri } from 'react-native-svg';\n\ntype Props = {\n  detail: any\n}\n\nconst DishDetail = (props: Props) => {\n  const [open, setOpen] = React.useState(true)\n  const posAnim = React.useRef(new Animated.Value((Dimensions.get('screen').height / 1.5) - (open ? 30 : (Dimensions.get('screen').height / 1.9)))).current;\n  const setPosition = () => {\n    // Will change heightAnim value to 1 in 5 seconds\n    setOpen(!open)\n    Animated.timing(posAnim, {\n      toValue: (Dimensions.get('screen').height / 1.5) - (open ? (Dimensions.get('screen').height / 1.9) : 30),\n      duration: 500\n    }).start();\n  }\n  const arrayMaker = (hot: number) => {\n    let myArray = []\n    for (let index = 0; index < hot; index++) {\n      myArray.push(index)\n    }\n    return myArray\n  }\n  return (\n    <View style={{\n      position: 'relative'\n    }}>\n      <ScrollView\n        style={{\n          position: 'absolute'\n        }}\n        horizontal\n        pagingEnabled\n        showsHorizontalScrollIndicator={true}\n        scrollEventThrottle={200}\n        decelerationRate=\"fast\"\n      >\n        {props.detail.Images.map((gallery: { image: string }) => <View\n          key={gallery.image}\n          style={{\n            width: Dimensions.get('screen').width,\n            height: Dimensions.get('screen').height / 1.5\n          }}>\n          <Image\n            source={{ uri: gallery.image }}\n            style={{ height: Dimensions.get('screen').height / 1.5 }}\n          />\n        </View>)}\n      </ScrollView>\n      <Animated.View\n        onTouchEndCapture={() => {\n          setPosition()\n        }}\n        style={{\n          padding: 30,\n          position: \"relative\",\n          backgroundColor: \"white\",\n          width: Dimensions.get('screen').width,\n          top: posAnim,\n          borderTopStartRadius: 30,\n          borderTopEndRadius: 30,\n          height: Dimensions.get('screen').height\n        }}>\n        <Text\n          style={{\n            fontSize: 26,\n            fontWeight: 'bold'\n          }}>\n          {props.detail.name}\n        </Text>\n        <Text\n          style={{\n            color: '#00A24A',\n            fontSize: 18,\n            fontWeight: '700',\n            marginBottom: 25,\n            marginRight: 30\n          }}>\n          {props.detail.category.toString().toUpperCase()}\n        </Text>\n        <Text\n          style={{\n            fontSize: 18,\n            fontWeight: '700'\n          }}>\n          Spiciness\n      </Text>\n        <View\n          style={{\n            display: \"flex\",\n            flexDirection: 'row',\n            marginBottom: 25,\n            height: 30\n          }}>\n          {arrayMaker(props.detail.hot).map(spicy =>\n            <SvgUri\n              key={spicy}\n              width={30}\n              height={30}\n              uri=\"https://pranaa-frontend-assets.s3-ap-southeast-1.amazonaws.com/static/icons/chilly.svg\"\n            />\n          )}\n        </View>\n\n        <Text\n          style={{\n            fontSize: 18,\n            fontWeight: '700'\n          }}>\n          Description\n      </Text>\n        <Text\n          style={{\n            fontSize: 16,\n            marginBottom: 25\n          }}>\n          {props.detail.description}\n        </Text>\n\n        <Text\n          style={{\n            fontSize: 18,\n            fontWeight: '700'\n          }}>\n          Ingredients\n      </Text>\n        <Text\n          style={{\n            fontSize: 16,\n            marginBottom: 25\n          }}>\n          {props.detail.ingredients}\n        </Text>\n\n        <Text\n          style={{\n            fontSize: 18,\n            fontWeight: '700'\n          }}>\n          Nutritional Information\n      </Text>\n        <Text\n          style={{\n            fontSize: 16\n          }}>\n          {props.detail.nutrition.split(',')[0]}\n        </Text>\n        <Text\n          style={{\n            fontSize: 16,\n            marginBottom: 25\n          }}>\n          {props.detail.nutrition.split(',')[1]}\n        </Text>\n\n        <Text\n          style={{\n            fontSize: 18,\n            fontWeight: '700'\n          }}>\n          Allergens\n      </Text>\n        <View\n          style={{\n            marginBottom: 25\n          }}>\n          {props.detail.Allergens.map((all: any) =>\n            <View\n              key={all.id}\n            style={{\n              display: 'flex',\n              flexDirection: 'row',\n              alignItems: 'center',\n              marginTop: 5\n            }}>\n              <Image\n                style={{\n                  width: 30,\n                  height: 30,\n                  borderRadius: 10,\n                  marginEnd: 10\n                }}\n                width={30}\n                height={30}\n                source={{ uri: all.allergenImage }}\n              />\n              <Text\n                style={{\n                  fontSize: 16\n                }}>\n                {all.allergenName}\n              </Text>\n            </View>)}\n        </View>\n      </Animated.View>\n    </View>\n  )\n}\n\nconst mapStateToProps = (state: any) => {\n  return {\n    detail: state.dish.detail\n  }\n}\n\nexport default connect(mapStateToProps)(DishDetail)\n"]},"metadata":{},"sourceType":"module"}