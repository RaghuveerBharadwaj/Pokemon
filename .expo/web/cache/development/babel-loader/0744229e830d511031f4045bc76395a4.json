{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/cyclopz/Desktop/Cyclopz/My Personal Git/React-Native/Pokemon/views/DishDetail.tsx\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { connect } from 'react-redux';\n\nvar DishDetail = function DishDetail(props) {\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    onTouchEndCapture: function onTouchEndCapture() {\n      return setOpen(!open);\n    },\n    style: {\n      height: Dimensions.get('screen').height / (open ? 2 : 6),\n      transition: 'height 1s'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    style: {\n      height: Dimensions.get('screen').height / (open ? 2 : 6),\n      transition: 'height 1s'\n    },\n    source: {\n      uri: props.detail.Images[0].image\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  })), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, props.detail.name));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    detail: state.dish.detail\n  };\n};\n\nexport default connect(mapStateToProps)(DishDetail);","map":{"version":3,"sources":["/home/cyclopz/Desktop/Cyclopz/My Personal Git/React-Native/Pokemon/views/DishDetail.tsx"],"names":["React","connect","DishDetail","props","useState","open","setOpen","height","Dimensions","get","transition","uri","detail","Images","image","name","mapStateToProps","state","dish"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAEA,SAASC,OAAT,QAAwB,aAAxB;;AAMA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAkB;AAAA,wBACXH,KAAK,CAACI,QAAN,CAAe,IAAf,CADW;AAAA;AAAA,MAC5BC,IAD4B;AAAA,MACtBC,OADsB;;AAEnC,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AACE,IAAA,iBAAiB,EAAE;AAAA,aAAMA,OAAO,CAAC,CAACD,IAAF,CAAb;AAAA,KADrB;AAEE,IAAA,KAAK,EAAE;AACLE,MAAAA,MAAM,EAAEC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBF,MAAzB,IAAmCF,IAAI,GAAG,CAAH,GAAO,CAA9C,CADH;AAELK,MAAAA,UAAU,EAAE;AAFP,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,oBAAC,KAAD;AACE,IAAA,KAAK,EAAE;AACLH,MAAAA,MAAM,EAAEC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBF,MAAzB,IAAmCF,IAAI,GAAG,CAAH,GAAO,CAA9C,CADH;AAELK,MAAAA,UAAU,EAAE;AAFP,KADT;AAKE,IAAA,MAAM,EAAE;AAAEC,MAAAA,GAAG,EAAER,KAAK,CAACS,MAAN,CAAaC,MAAb,CAAoB,CAApB,EAAuBC;AAA9B,KALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF,EAgBE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGX,KAAK,CAACS,MAAN,CAAaG,IADhB,CAhBF,CADF;AAsBD,CAxBD;;AA0BA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAgB;AACtC,SAAO;AACLL,IAAAA,MAAM,EAAEK,KAAK,CAACC,IAAN,CAAWN;AADd,GAAP;AAGD,CAJD;;AAMA,eAAeX,OAAO,CAACe,eAAD,CAAP,CAAyBd,UAAzB,CAAf","sourcesContent":["import React from 'react'\nimport { View, Text, Dimensions, Image } from 'react-native'\nimport { connect } from 'react-redux'\n\ntype Props = {\n  detail: any\n}\n\nconst DishDetail = (props: Props) => {\n  const [open, setOpen] = React.useState(true)\n  return (\n    <View>\n      <View\n        onTouchEndCapture={() => setOpen(!open)}\n        style={{ \n          height: Dimensions.get('screen').height / (open ? 2 : 6),\n          transition: 'height 1s'\n       }}\n      >\n        <Image\n          style={{ \n            height: Dimensions.get('screen').height / (open ? 2 : 6),\n            transition: 'height 1s'\n          }}\n          source={{ uri: props.detail.Images[0].image }}\n        />\n      </View>\n      <Text>\n        {props.detail.name}\n      </Text>\n    </View>\n  )\n}\n\nconst mapStateToProps = (state: any) => {\n  return {\n    detail: state.dish.detail\n  }\n}\n\nexport default connect(mapStateToProps)(DishDetail)\n"]},"metadata":{},"sourceType":"module"}